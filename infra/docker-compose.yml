version: '3.8'

services:
  # PostgreSQL database (optional - can use Supabase instead)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: langchain_flow
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./supabase.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis (for BullMQ queues)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # LangChain Flow Web App
  web:
    build:
      context: ../
      dockerfile: infra/Dockerfile.web
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - NEXT_PUBLIC_SERVER_URL=http://server:3001
      - NEXT_PUBLIC_INTERTOOLS_URL=http://intertools:3002
    depends_on:
      - server
      - intertools
    volumes:
      - ../apps/web:/app/apps/web
      - ../packages:/app/packages
      - /app/node_modules
      - /app/apps/web/node_modules
      - /app/packages/ui/node_modules
      - /app/packages/utils/node_modules

  # LangChain Flow API Server
  server:
    build:
      context: ../
      dockerfile: infra/Dockerfile.server
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - VERCEL_TOKEN=${VERCEL_TOKEN}
      - REDIS_URL=redis://redis:6379
      - CORS_ORIGIN=http://localhost:3000
      - INTERTOOLS_SERVER_URL=http://intertools:3002
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ../apps/server:/app/apps/server
      - ../packages:/app/packages
      - /app/node_modules
      - /app/apps/server/node_modules
      - /app/packages/utils/node_modules

  # InterTools Microservice
  intertools:
    build:
      context: ../
      dockerfile: infra/Dockerfile.intertools
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - CORS_ORIGIN=*
      - INTERTOOLS_URL=http://localhost:3002
    volumes:
      - ../packages/intertools:/app/packages/intertools
      - ../packages/utils:/app/packages/utils
      - /app/node_modules
      - /app/packages/intertools/node_modules
      - /app/packages/utils/node_modules

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: langchain-flow-network
